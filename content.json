{"meta":{"title":"데이터 바다의 요요누","subtitle":"","description":"","author":"요요누","url":"http://ioio-noo.github.io","root":"/"},"pages":[{"title":"all-categories","date":"2020-10-31T19:42:51.364Z","updated":"2020-10-31T19:42:51.364Z","comments":false,"path":"all-categories/index.html","permalink":"http://ioio-noo.github.io/all-categories/index.html","excerpt":"","text":""},{"title":"all-tags","date":"2020-10-31T19:43:00.626Z","updated":"2020-10-31T19:43:00.626Z","comments":false,"path":"all-tags/index.html","permalink":"http://ioio-noo.github.io/all-tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Stepwise Selection과 Regsubset","slug":"007-step-regsubset","date":"2020-11-01T01:08:18.000Z","updated":"2020-11-01T02:17:00.000Z","comments":true,"path":"2020/11/01/007-step-regsubset/","link":"","permalink":"http://ioio-noo.github.io/2020/11/01/007-step-regsubset/","excerpt":"","text":"변수 선택하기 - Stepwise Selection, regsubsetsbaseball 데이터에는 야수 337명에 대한 27가지의 스탯과 연봉이 나타나 있다. 스탯은 1991년도 기준이고, 연봉은 1992년도에 책정된 값이다. (데이터) 스탯의 변수명 average OBP runs hits doubles triples homeruns 타율 출루율 득점 안타 2루타 3루타 홈런 SBs RBIs walks SOs errors freeagent arbitration 도루 타점 볼넷 삼진 실책 FA 연봉조정 runs/SOs, hits/SOs , RBIs/SOs , walks/SOs OBP/errors, runs/errors , hits/errors, homeruns/errors SOs*errors, SBs*OBP, SBs*runs, SBs*hits 연봉을 반응변수로 삼아 회귀 모형을 만들어 보자. 이를 Full Model, 또는 Saturated Model이라 한다. 다중 회귀 모형에는 관행적으로 변수 선택을 진행한다. 줄여진 모형은 Reduced Model이라 한다. AIC를 기준으로 변수를 줄이는 방법을 두 가지 살펴보겠다. Stepwise SelectionStepwise Selection 알고리즘은 변수를 하나씩 제거하거나 추가하면서 각 경우의 AIC를 비교하고, 개중 가장 낮은 값을 갖는 모형을 찾는다. Backward Selection: 모든 변수를 가진 saturated model에서 변수를 하나씩 소거해 나간다. 제거 후에 AIC가 작아졌다면 제거된 모형을 채택하고 더 이상 AIC가 나아지지 않을 때까지 같은 작업을 반복한다. Forward Selection: 반대로 상수만 지닌 reduced model에서 변수를 하나씩 추가하는 방식이다. “Both”: 두 가지를 절충하여 추가와 제거를 반복하고자 하는 경우, (R 기준) both 인자를 넣는다. 각 방식을 적용한 결과는 다음과 같이 나타났다. 채택 변수 수 최종 AIC Backward 12 -418.9421 Forward 27 -396.706 Both 12 -418.9421 Forward는 전체 설명변수를 모두 가져왔다. Both와 Backward에서는 동일한 모형이 채택되었다. 이 때 선택된 변수는 다음과 같다: 타율(-), 득점(+), 삼루타(-), 타점(+), 삼진(-), FA(+), 연봉조정(+), 득점/삼진(-), 안타/삼진(+), 삼진x실책(-), 도루x출루율(+), 도루x득점(-). regsubsetsregsubsets 알고리즘은 고정된 변수 개수에 맞추어 최적 모형을 도출한다. 12345678910111213141516171819regsub.AIC.ftn = function(j)&#123; model.row = regsub.baseball$which[j,] model.exp = &#x27;lm( log(salary) ~ &#x27; for (i in 2:28)&#123; if (model.row[i] == TRUE)&#123; var.name = names(model.row)[i] model.exp = paste(model.exp, &quot; + &quot;, var.name) &#125; &#125; model.exp = paste(model.exp,&quot;, data = df.baseball)&quot;) result = eval(parse(text = model.exp)) if(j &lt; 14)&#123; varnames = paste(names(model.row)[model.row], collapse = &#x27; &#x27;) &#125; else varnames = paste(&#x27;-&#x27;, names(model.row)[!model.row], collapse = &#x27; &#x27;) return(c(AIC = extractAIC(result)[2], var = varnames))&#125; p = 1에서 27까지의 최적 Subsets는 아래의 표에 나타내었다. 개중 AIC가 가장 작은 모형은 p = 12에서 얻을 수 있었다. p AIC Features Selected 1 -86.20355 hits 2 -236.91899 freeagent arbitration 3 -382.08585 rbis freeagent arbitration 4 -397.06152 hits rbis freeagent arbitration 5 -406.00412 hits rbis freeagent arbitration soserrors 6 -410.43729 runs rbis sos freeagent arbitration runsperso 7 -413.72379 runs rbis sos freeagent arbitration runsperso hitsperso 8 -416.30347 runs rbis sos freeagent arbitration obppererror runspererror hitspererror 9 -416.42493 runs rbis sos freeagent arbitration obppererror runspererror hitspererror soserrors 10 -417.47395 runs rbis sos freeagent arbitration runsperso hitsperso soserrors sbsobp sbsruns 11 -418.45106 average runs rbis sos freeagent arbitration runsperso hitsperso soserrors sbsobp sbsruns 12 -418.94721 obp runs triples rbis sos freeagent arbitration runsperso hitsperso soserrors sbsobp sbsruns 13 -418.09221 average runs triples rbis sos freeagent arbitration runsperso hitsperso hrsperso soserrors sbsobp sbsruns 14 -417.20098 - average - hits - doubles - homeruns - sbs - errors - rbisperso - walksperso - obppererror - runspererror - hitspererror - hrspererror - sbshits 15 -416.22752 - average - hits - doubles - homeruns - sbs - errors - walksperso - obppererror - runspererror - hitspererror - hrspererror - sbshits 16 -415.45316 - average - doubles - walks - sbs - errors - walksperso - obppererror - runspererror - hitspererror - hrspererror - sbshits 17 -414.01172 - average - doubles - sbs - errors - walksperso - obppererror - runspererror - hitspererror - hrspererror - sbshits 18 -413.16254 - average - doubles - walks - sbs - walksperso - runspererror - hrspererror - soserrors - sbshits 19 -411.53320 - average - doubles - sbs - walksperso - runspererror - hrspererror - soserrors - sbshits 20 -410.00084 - obp - doubles - sbs - runspererror - hrspererror - soserrors - sbshits 21 -408.22846 - obp - doubles - sbs - errors - hrspererror - sbshits 22 -406.42133 - obp - sbs - errors - hrspererror - sbshits 23 -404.56810 - obp - sbs - errors - sbshits 24 -402.63184 - obp - errors - sbshits 25 -400.66945 - errors - sbshits 26 -398.69257 - sbshits 27 -396.70603 - 최적의 모형인 p = 12에서 선택된 변수는 출루율(-), 득점(+), 삼루타(-), 타점(+), FA(+), 연봉조정(+), 득점삼진비(-), 안타삼진비(+), 도루x실책(-), 도루x출루율(+), 도루x득점(-)이다. 양쪽 결과가 비슷하게 나타났다. 문장으로 풀어 쓴다면 안타가 많고 타율이 좋은 타자는 오히려 낮은 연봉을 받는다고 해석할 수 있다. 이는 높은 연봉이 책정되는 홈런 타자들에게 영향을 받은 결과로 보인다. (3루타의 경우, 장타력뿐만 아니라 상당한 주력이 함께 뒷받침되어야 하는 데다 부상의 위험이 따르므로 대부분의 거포형 선수와 베테랑 선수들은 2루에서 멈추게 된다.) 큰 폭으로 연봉이 상승하게 되는 FA 전환 여부 또한 모형에 주는 영향이 크다. 연봉 조정 역시 같은 맥락에서 해석할 수 있을 것이다. * ScopeR에서 step함수를 사용한다면 변수의 범위를 지정할 수 있다. 123step(model, direction = [&#x27;forward&#x27;,&#x27;backward&#x27;], scope = list(upper = y ~ ., lower = y ~ x1 + x2 + x3 + x4 + x5))","categories":[],"tags":[{"name":"Data Science","slug":"Data-Science","permalink":"http://ioio-noo.github.io/tags/Data-Science/"}]},{"title":"004-lift","slug":"004-lift","date":"2020-11-01T00:04:48.000Z","updated":"2020-11-01T00:04:48.000Z","comments":true,"path":"2020/11/01/004-lift/","link":"","permalink":"http://ioio-noo.github.io/2020/11/01/004-lift/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"004-lift","slug":"006-k-means","date":"2020-11-01T00:04:48.000Z","updated":"2020-11-01T01:46:26.000Z","comments":true,"path":"2020/11/01/006-k-means/","link":"","permalink":"http://ioio-noo.github.io/2020/11/01/006-k-means/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"Eigenvalue와 Eigenvectors","slug":"001-eigen","date":"2020-10-31T17:57:25.000Z","updated":"2020-10-31T22:04:48.968Z","comments":true,"path":"2020/11/01/001-eigen/","link":"","permalink":"http://ioio-noo.github.io/2020/11/01/001-eigen/","excerpt":"","text":"Eigenvalue, Eigenvectors 위와 같이, 임의의 정방행렬 A에 대해 AB = λB인 (단, B는 0이 아닌 벡터) B를 eigenvector, 상수 λ를 eigenvalue 라고 한다. Eigen Decomposition Av = \\lambda v \\\\ AQ = Q\\Lambda \\\\ A = Q\\Lambda Q^{-1}","categories":[],"tags":[{"name":"Eigenvalues, Eigenvectors, SVD","slug":"Eigenvalues-Eigenvectors-SVD","permalink":"http://ioio-noo.github.io/tags/Eigenvalues-Eigenvectors-SVD/"}]}],"categories":[],"tags":[{"name":"Data Science","slug":"Data-Science","permalink":"http://ioio-noo.github.io/tags/Data-Science/"},{"name":"Eigenvalues, Eigenvectors, SVD","slug":"Eigenvalues-Eigenvectors-SVD","permalink":"http://ioio-noo.github.io/tags/Eigenvalues-Eigenvectors-SVD/"}]}